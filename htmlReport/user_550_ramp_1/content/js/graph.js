/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 179288.0, "series": [{"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 11.0], [9.9, 11.0], [10.0, 93882.0], [10.1, 93882.0], [10.2, 94021.0], [10.3, 94021.0], [10.4, 94046.0], [10.5, 94046.0], [10.6, 94062.0], [10.7, 94062.0], [10.8, 94174.0], [10.9, 94174.0], [11.0, 94236.0], [11.1, 94236.0], [11.2, 94275.0], [11.3, 94275.0], [11.4, 94563.0], [11.5, 94563.0], [11.6, 94894.0], [11.7, 94894.0], [11.8, 95021.0], [11.9, 95021.0], [12.0, 95081.0], [12.1, 95081.0], [12.2, 95102.0], [12.3, 95102.0], [12.4, 95122.0], [12.5, 95122.0], [12.6, 95131.0], [12.7, 95131.0], [12.8, 95148.0], [12.9, 95148.0], [13.0, 95358.0], [13.1, 95358.0], [13.2, 95417.0], [13.3, 95417.0], [13.4, 95431.0], [13.5, 95431.0], [13.6, 95551.0], [13.7, 95551.0], [13.8, 95615.0], [13.9, 95615.0], [14.0, 95680.0], [14.1, 95680.0], [14.2, 95851.0], [14.3, 95851.0], [14.4, 95868.0], [14.5, 95868.0], [14.6, 95896.0], [14.7, 95896.0], [14.8, 95998.0], [14.9, 95998.0], [15.0, 96014.0], [15.1, 96014.0], [15.2, 96042.0], [15.3, 96042.0], [15.4, 96121.0], [15.5, 96121.0], [15.6, 96131.0], [15.7, 96131.0], [15.8, 96164.0], [15.9, 96164.0], [16.0, 96191.0], [16.1, 96191.0], [16.2, 96325.0], [16.3, 96325.0], [16.4, 96486.0], [16.5, 96486.0], [16.6, 96493.0], [16.7, 96493.0], [16.8, 96506.0], [16.9, 96506.0], [17.0, 96523.0], [17.1, 96523.0], [17.2, 96529.0], [17.3, 96529.0], [17.4, 97081.0], [17.5, 97081.0], [17.6, 97424.0], [17.7, 97424.0], [17.8, 97453.0], [17.9, 97453.0], [18.0, 97465.0], [18.1, 97465.0], [18.2, 97470.0], [18.3, 97470.0], [18.4, 97488.0], [18.5, 97488.0], [18.6, 97786.0], [18.7, 97786.0], [18.8, 97962.0], [18.9, 97962.0], [19.0, 98006.0], [19.1, 98006.0], [19.2, 98063.0], [19.3, 98063.0], [19.4, 98393.0], [19.5, 98393.0], [19.6, 98454.0], [19.7, 98454.0], [19.8, 98592.0], [19.9, 98592.0], [20.0, 98597.0], [20.1, 98597.0], [20.2, 98657.0], [20.3, 98657.0], [20.4, 98668.0], [20.5, 98668.0], [20.6, 98772.0], [20.7, 98772.0], [20.8, 98790.0], [20.9, 98790.0], [21.0, 98918.0], [21.1, 98918.0], [21.2, 99090.0], [21.3, 99090.0], [21.4, 99130.0], [21.5, 99130.0], [21.6, 99183.0], [21.7, 99183.0], [21.8, 99364.0], [21.9, 99364.0], [22.0, 99416.0], [22.1, 99416.0], [22.2, 99442.0], [22.3, 99442.0], [22.4, 99443.0], [22.5, 99443.0], [22.6, 99561.0], [22.7, 99561.0], [22.8, 99636.0], [22.9, 99636.0], [23.0, 99663.0], [23.1, 99663.0], [23.2, 99692.0], [23.3, 99692.0], [23.4, 99792.0], [23.5, 99792.0], [23.6, 99828.0], [23.7, 99828.0], [23.8, 99870.0], [23.9, 99870.0], [24.0, 99986.0], [24.1, 99986.0], [24.2, 100087.0], [24.3, 100087.0], [24.4, 100104.0], [24.5, 100104.0], [24.6, 100347.0], [24.7, 100347.0], [24.8, 100354.0], [24.9, 100354.0], [25.0, 100475.0], [25.1, 100475.0], [25.2, 100643.0], [25.3, 100643.0], [25.4, 100649.0], [25.5, 100649.0], [25.6, 100657.0], [25.7, 100657.0], [25.8, 100833.0], [25.9, 100833.0], [26.0, 100856.0], [26.1, 100856.0], [26.2, 101055.0], [26.3, 101055.0], [26.4, 101065.0], [26.5, 101065.0], [26.6, 101271.0], [26.7, 101271.0], [26.8, 101276.0], [26.9, 101276.0], [27.0, 101316.0], [27.1, 101316.0], [27.2, 101338.0], [27.3, 101338.0], [27.4, 101416.0], [27.5, 101416.0], [27.6, 101429.0], [27.7, 101429.0], [27.8, 101510.0], [27.9, 101510.0], [28.0, 101581.0], [28.1, 101581.0], [28.2, 101647.0], [28.3, 101647.0], [28.4, 101748.0], [28.5, 101748.0], [28.6, 101976.0], [28.7, 101976.0], [28.8, 102215.0], [28.9, 102215.0], [29.0, 102368.0], [29.1, 102368.0], [29.2, 102475.0], [29.3, 102475.0], [29.4, 102509.0], [29.5, 102509.0], [29.6, 102725.0], [29.7, 102725.0], [29.8, 102763.0], [29.9, 102763.0], [30.0, 104760.0], [30.1, 104760.0], [30.2, 105348.0], [30.3, 105348.0], [30.4, 110600.0], [30.5, 110600.0], [30.6, 110609.0], [30.7, 110609.0], [30.8, 110635.0], [30.9, 110635.0], [31.0, 110637.0], [31.1, 110637.0], [31.2, 110717.0], [31.3, 110717.0], [31.4, 110761.0], [31.5, 110761.0], [31.6, 110782.0], [31.7, 110782.0], [31.8, 110797.0], [31.9, 110797.0], [32.0, 110803.0], [32.1, 110803.0], [32.2, 110881.0], [32.3, 110881.0], [32.4, 110890.0], [32.5, 110890.0], [32.6, 110935.0], [32.7, 110935.0], [32.8, 110977.0], [32.9, 110977.0], [33.0, 110986.0], [33.1, 110986.0], [33.2, 111026.0], [33.3, 111026.0], [33.4, 111035.0], [33.5, 111035.0], [33.6, 111047.0], [33.7, 111047.0], [33.8, 111108.0], [33.9, 111108.0], [34.0, 111144.0], [34.1, 111144.0], [34.2, 111205.0], [34.3, 111205.0], [34.4, 111255.0], [34.5, 111255.0], [34.6, 111272.0], [34.7, 111272.0], [34.8, 111305.0], [34.9, 111305.0], [35.0, 111312.0], [35.1, 111312.0], [35.2, 111488.0], [35.3, 111488.0], [35.4, 111490.0], [35.5, 111490.0], [35.6, 111506.0], [35.7, 111506.0], [35.8, 111529.0], [35.9, 111529.0], [36.0, 111541.0], [36.1, 111541.0], [36.2, 111546.0], [36.3, 111546.0], [36.4, 111618.0], [36.5, 111618.0], [36.6, 111745.0], [36.7, 111745.0], [36.8, 111752.0], [36.9, 111752.0], [37.0, 111774.0], [37.1, 111774.0], [37.2, 111782.0], [37.3, 111782.0], [37.4, 111790.0], [37.5, 111790.0], [37.6, 111852.0], [37.7, 111852.0], [37.8, 111852.0], [37.9, 111905.0], [38.0, 111905.0], [38.1, 111910.0], [38.2, 111910.0], [38.3, 111950.0], [38.4, 111950.0], [38.5, 111962.0], [38.6, 111962.0], [38.7, 111983.0], [38.8, 111983.0], [38.9, 112025.0], [39.0, 112025.0], [39.1, 112105.0], [39.2, 112105.0], [39.3, 112267.0], [39.4, 112267.0], [39.5, 112299.0], [39.6, 112299.0], [39.7, 112305.0], [39.8, 112305.0], [39.9, 112336.0], [40.0, 112336.0], [40.1, 112349.0], [40.2, 112349.0], [40.3, 112488.0], [40.4, 112488.0], [40.5, 112546.0], [40.6, 112546.0], [40.7, 112585.0], [40.8, 112585.0], [40.9, 112720.0], [41.0, 112720.0], [41.1, 112797.0], [41.2, 112797.0], [41.3, 112829.0], [41.4, 112829.0], [41.5, 112971.0], [41.6, 112971.0], [41.7, 113255.0], [41.8, 113255.0], [41.9, 113588.0], [42.0, 113588.0], [42.1, 114405.0], [42.2, 114405.0], [42.3, 114786.0], [42.4, 114786.0], [42.5, 115373.0], [42.6, 115373.0], [42.7, 115920.0], [42.8, 115920.0], [42.9, 116093.0], [43.0, 116093.0], [43.1, 116371.0], [43.2, 116371.0], [43.3, 117074.0], [43.4, 117074.0], [43.5, 117121.0], [43.6, 117121.0], [43.7, 117499.0], [43.8, 117499.0], [43.9, 117720.0], [44.0, 117720.0], [44.1, 117888.0], [44.2, 117888.0], [44.3, 118148.0], [44.4, 118148.0], [44.5, 118347.0], [44.6, 118347.0], [44.7, 118527.0], [44.8, 118527.0], [44.9, 118560.0], [45.0, 118560.0], [45.1, 118561.0], [45.2, 118561.0], [45.3, 118572.0], [45.4, 118572.0], [45.5, 119267.0], [45.6, 119267.0], [45.7, 119303.0], [45.8, 119303.0], [45.9, 119345.0], [46.0, 119345.0], [46.1, 119606.0], [46.2, 119606.0], [46.3, 119618.0], [46.4, 119618.0], [46.5, 119895.0], [46.6, 119895.0], [46.7, 120085.0], [46.8, 120085.0], [46.9, 120187.0], [47.0, 120187.0], [47.1, 120314.0], [47.2, 120314.0], [47.3, 120425.0], [47.4, 120425.0], [47.5, 120430.0], [47.6, 120430.0], [47.7, 120837.0], [47.8, 120837.0], [47.9, 120996.0], [48.0, 120996.0], [48.1, 121003.0], [48.2, 121003.0], [48.3, 121297.0], [48.4, 121297.0], [48.5, 122254.0], [48.6, 122254.0], [48.7, 122814.0], [48.8, 122814.0], [48.9, 122860.0], [49.0, 122860.0], [49.1, 123039.0], [49.2, 123039.0], [49.3, 123652.0], [49.4, 123652.0], [49.5, 124045.0], [49.6, 124045.0], [49.7, 124356.0], [49.8, 124356.0], [49.9, 124394.0], [50.0, 124394.0], [50.1, 125244.0], [50.2, 125244.0], [50.3, 125420.0], [50.4, 125420.0], [50.5, 125506.0], [50.6, 125506.0], [50.7, 125507.0], [50.8, 125507.0], [50.9, 125891.0], [51.0, 125891.0], [51.1, 125892.0], [51.2, 125892.0], [51.3, 126318.0], [51.4, 126318.0], [51.5, 126321.0], [51.6, 126321.0], [51.7, 126534.0], [51.8, 126534.0], [51.9, 126755.0], [52.0, 126755.0], [52.1, 126855.0], [52.2, 126855.0], [52.3, 127210.0], [52.4, 127210.0], [52.5, 127235.0], [52.6, 127235.0], [52.7, 127635.0], [52.8, 127635.0], [52.9, 127669.0], [53.0, 127669.0], [53.1, 128111.0], [53.2, 128111.0], [53.3, 128251.0], [53.4, 128251.0], [53.5, 129693.0], [53.6, 129693.0], [53.7, 129826.0], [53.8, 129826.0], [53.9, 129895.0], [54.0, 129895.0], [54.1, 130266.0], [54.2, 130266.0], [54.3, 130532.0], [54.4, 130532.0], [54.5, 130616.0], [54.6, 130616.0], [54.7, 130768.0], [54.8, 130768.0], [54.9, 130880.0], [55.0, 130880.0], [55.1, 130953.0], [55.2, 130953.0], [55.3, 131153.0], [55.4, 131153.0], [55.5, 131288.0], [55.6, 131288.0], [55.7, 131372.0], [55.8, 131372.0], [55.9, 131877.0], [56.0, 131877.0], [56.1, 132090.0], [56.2, 132090.0], [56.3, 132287.0], [56.4, 132287.0], [56.5, 132448.0], [56.6, 132448.0], [56.7, 132550.0], [56.8, 132550.0], [56.9, 132764.0], [57.0, 132764.0], [57.1, 132932.0], [57.2, 132932.0], [57.3, 133124.0], [57.4, 133124.0], [57.5, 133372.0], [57.6, 133372.0], [57.7, 133541.0], [57.8, 133541.0], [57.9, 133674.0], [58.0, 133674.0], [58.1, 134164.0], [58.2, 134164.0], [58.3, 134286.0], [58.4, 134286.0], [58.5, 134342.0], [58.6, 134342.0], [58.7, 134528.0], [58.8, 134528.0], [58.9, 134870.0], [59.0, 134870.0], [59.1, 135096.0], [59.2, 135096.0], [59.3, 135207.0], [59.4, 135207.0], [59.5, 135458.0], [59.6, 135458.0], [59.7, 135493.0], [59.8, 135493.0], [59.9, 135804.0], [60.0, 135804.0], [60.1, 135839.0], [60.2, 135839.0], [60.3, 136583.0], [60.4, 136583.0], [60.5, 136756.0], [60.6, 136756.0], [60.7, 136815.0], [60.8, 136815.0], [60.9, 137005.0], [61.0, 137005.0], [61.1, 137089.0], [61.2, 137089.0], [61.3, 137453.0], [61.4, 137453.0], [61.5, 137672.0], [61.6, 137672.0], [61.7, 137739.0], [61.8, 137739.0], [61.9, 137905.0], [62.0, 137905.0], [62.1, 138065.0], [62.2, 138065.0], [62.3, 138453.0], [62.4, 138453.0], [62.5, 138671.0], [62.6, 138671.0], [62.7, 138728.0], [62.8, 138728.0], [62.9, 138946.0], [63.0, 138946.0], [63.1, 138955.0], [63.2, 138955.0], [63.3, 139334.0], [63.4, 139334.0], [63.5, 139597.0], [63.6, 139597.0], [63.7, 139600.0], [63.8, 139600.0], [63.9, 139786.0], [64.0, 139786.0], [64.1, 139905.0], [64.2, 139905.0], [64.3, 139989.0], [64.4, 139989.0], [64.5, 139998.0], [64.6, 139998.0], [64.7, 140981.0], [64.8, 140981.0], [64.9, 140995.0], [65.0, 140995.0], [65.1, 143054.0], [65.2, 143054.0], [65.3, 143055.0], [65.4, 143055.0], [65.5, 143123.0], [65.6, 143123.0], [65.7, 143396.0], [65.8, 143396.0], [65.9, 159580.0], [66.0, 159580.0], [66.1, 159605.0], [66.2, 159605.0], [66.3, 159824.0], [66.4, 159824.0], [66.5, 160081.0], [66.6, 160081.0], [66.7, 160241.0], [66.8, 160241.0], [66.9, 164142.0], [67.0, 164142.0], [67.1, 165601.0], [67.2, 165601.0], [67.3, 165965.0], [67.4, 165965.0], [67.5, 165993.0], [67.6, 165993.0], [67.7, 166070.0], [67.8, 166070.0], [67.9, 166195.0], [68.0, 166195.0], [68.1, 166333.0], [68.2, 166333.0], [68.3, 166449.0], [68.4, 166449.0], [68.5, 166832.0], [68.6, 166832.0], [68.7, 166850.0], [68.8, 166850.0], [68.9, 166886.0], [69.0, 166886.0], [69.1, 166905.0], [69.2, 166905.0], [69.3, 166956.0], [69.4, 166956.0], [69.5, 167056.0], [69.6, 167056.0], [69.7, 167089.0], [69.8, 167089.0], [69.9, 167101.0], [70.0, 167101.0], [70.1, 167133.0], [70.2, 167133.0], [70.3, 167206.0], [70.4, 167206.0], [70.5, 167316.0], [70.6, 167316.0], [70.7, 167365.0], [70.8, 167365.0], [70.9, 167533.0], [71.0, 167533.0], [71.1, 168287.0], [71.2, 168287.0], [71.3, 168365.0], [71.4, 168365.0], [71.5, 168432.0], [71.6, 168432.0], [71.7, 169283.0], [71.8, 169283.0], [71.9, 169291.0], [72.0, 169291.0], [72.1, 169859.0], [72.2, 169859.0], [72.3, 169927.0], [72.4, 169927.0], [72.5, 170484.0], [72.6, 170484.0], [72.7, 170599.0], [72.8, 170599.0], [72.9, 170695.0], [73.0, 170695.0], [73.1, 170701.0], [73.2, 170701.0], [73.3, 170744.0], [73.4, 170744.0], [73.5, 170932.0], [73.6, 170932.0], [73.7, 171091.0], [73.8, 171091.0], [73.9, 171205.0], [74.0, 171205.0], [74.1, 171685.0], [74.2, 171685.0], [74.3, 171978.0], [74.4, 171978.0], [74.5, 172106.0], [74.6, 172106.0], [74.7, 172186.0], [74.8, 172186.0], [74.9, 172513.0], [75.0, 172513.0], [75.1, 172549.0], [75.2, 172549.0], [75.3, 172576.0], [75.4, 172576.0], [75.5, 172629.0], [75.6, 172629.0], [75.7, 172665.0], [75.8, 172665.0], [75.9, 172788.0], [76.0, 172788.0], [76.1, 172829.0], [76.2, 172829.0], [76.3, 172843.0], [76.4, 172843.0], [76.5, 172890.0], [76.6, 172890.0], [76.7, 172924.0], [76.8, 172924.0], [76.9, 173002.0], [77.0, 173002.0], [77.1, 173025.0], [77.2, 173025.0], [77.3, 173030.0], [77.4, 173030.0], [77.5, 173048.0], [77.6, 173048.0], [77.7, 173119.0], [77.8, 173119.0], [77.9, 173142.0], [78.0, 173142.0], [78.1, 173205.0], [78.2, 173205.0], [78.3, 173254.0], [78.4, 173254.0], [78.5, 173304.0], [78.6, 173304.0], [78.7, 173376.0], [78.8, 173376.0], [78.9, 173562.0], [79.0, 173562.0], [79.1, 173589.0], [79.2, 173589.0], [79.3, 173633.0], [79.4, 173633.0], [79.5, 173738.0], [79.6, 173738.0], [79.7, 174138.0], [79.8, 174138.0], [79.9, 174291.0], [80.0, 174291.0], [80.1, 174367.0], [80.2, 174367.0], [80.3, 174421.0], [80.4, 174421.0], [80.5, 174501.0], [80.6, 174501.0], [80.7, 174608.0], [80.8, 174608.0], [80.9, 174629.0], [81.0, 174629.0], [81.1, 174685.0], [81.2, 174685.0], [81.3, 174900.0], [81.4, 174900.0], [81.5, 174922.0], [81.6, 174922.0], [81.7, 175056.0], [81.8, 175056.0], [81.9, 175159.0], [82.0, 175159.0], [82.1, 175344.0], [82.2, 175344.0], [82.3, 175470.0], [82.4, 175470.0], [82.5, 175531.0], [82.6, 175531.0], [82.7, 175654.0], [82.8, 175654.0], [82.9, 175684.0], [83.0, 175684.0], [83.1, 175688.0], [83.2, 175688.0], [83.3, 175704.0], [83.4, 175704.0], [83.5, 175706.0], [83.6, 175706.0], [83.7, 175741.0], [83.8, 175741.0], [83.9, 175893.0], [84.0, 175893.0], [84.1, 175919.0], [84.2, 175919.0], [84.3, 175988.0], [84.4, 175988.0], [84.5, 176000.0], [84.6, 176000.0], [84.7, 176019.0], [84.8, 176019.0], [84.9, 176050.0], [85.0, 176050.0], [85.1, 176063.0], [85.2, 176063.0], [85.3, 176132.0], [85.4, 176132.0], [85.5, 176212.0], [85.6, 176212.0], [85.7, 176241.0], [85.8, 176241.0], [85.9, 176278.0], [86.0, 176278.0], [86.1, 176302.0], [86.2, 176302.0], [86.3, 176394.0], [86.4, 176394.0], [86.5, 176448.0], [86.6, 176448.0], [86.7, 176478.0], [86.8, 176478.0], [86.9, 176491.0], [87.0, 176491.0], [87.1, 176506.0], [87.2, 176506.0], [87.3, 176524.0], [87.4, 176524.0], [87.5, 176538.0], [87.6, 176538.0], [87.7, 176552.0], [87.8, 176552.0], [87.9, 176578.0], [88.0, 176578.0], [88.1, 176597.0], [88.2, 176597.0], [88.3, 176683.0], [88.4, 176683.0], [88.5, 176708.0], [88.6, 176708.0], [88.7, 176755.0], [88.8, 176755.0], [88.9, 176767.0], [89.0, 176767.0], [89.1, 176773.0], [89.2, 176773.0], [89.3, 176872.0], [89.4, 176872.0], [89.5, 176883.0], [89.6, 176883.0], [89.7, 176891.0], [89.8, 176891.0], [89.9, 176945.0], [90.0, 176945.0], [90.1, 176958.0], [90.2, 176958.0], [90.3, 176995.0], [90.4, 176995.0], [90.5, 176995.0], [90.6, 176995.0], [90.7, 176996.0], [90.8, 176996.0], [90.9, 177128.0], [91.0, 177128.0], [91.1, 177143.0], [91.2, 177143.0], [91.3, 177148.0], [91.4, 177148.0], [91.5, 177151.0], [91.6, 177151.0], [91.7, 177166.0], [91.8, 177166.0], [91.9, 177203.0], [92.0, 177203.0], [92.1, 177214.0], [92.2, 177214.0], [92.3, 177230.0], [92.4, 177230.0], [92.5, 177260.0], [92.6, 177260.0], [92.7, 177273.0], [92.8, 177273.0], [92.9, 177328.0], [93.0, 177328.0], [93.1, 177422.0], [93.2, 177422.0], [93.3, 177429.0], [93.4, 177429.0], [93.5, 177456.0], [93.6, 177456.0], [93.7, 177470.0], [93.8, 177470.0], [93.9, 177541.0], [94.0, 177541.0], [94.1, 177617.0], [94.2, 177617.0], [94.3, 177627.0], [94.4, 177627.0], [94.5, 177636.0], [94.6, 177636.0], [94.7, 177710.0], [94.8, 177710.0], [94.9, 177715.0], [95.0, 177715.0], [95.1, 177720.0], [95.2, 177720.0], [95.3, 177744.0], [95.4, 177744.0], [95.5, 177778.0], [95.6, 177778.0], [95.7, 177818.0], [95.8, 177818.0], [95.9, 177910.0], [96.0, 177910.0], [96.1, 177925.0], [96.2, 177925.0], [96.3, 177937.0], [96.4, 177937.0], [96.5, 177971.0], [96.6, 177971.0], [96.7, 178064.0], [96.8, 178064.0], [96.9, 178127.0], [97.0, 178127.0], [97.1, 178130.0], [97.2, 178130.0], [97.3, 178182.0], [97.4, 178182.0], [97.5, 178259.0], [97.6, 178259.0], [97.7, 178297.0], [97.8, 178297.0], [97.9, 178327.0], [98.0, 178327.0], [98.1, 178395.0], [98.2, 178395.0], [98.3, 178422.0], [98.4, 178422.0], [98.5, 178633.0], [98.6, 178633.0], [98.7, 178651.0], [98.8, 178651.0], [98.9, 178821.0], [99.0, 178821.0], [99.1, 178848.0], [99.2, 178848.0], [99.3, 178995.0], [99.4, 178995.0], [99.5, 179005.0], [99.6, 179005.0], [99.7, 179035.0], [99.8, 179035.0], [99.9, 179288.0], [100.0, 179288.0]], "isOverall": false, "label": "Create Issue User 500 Ramp 1", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 93834.0], [11.2, 93834.0], [11.3, 93840.0], [11.4, 93840.0], [11.5, 93871.0], [11.6, 93871.0], [11.7, 93893.0], [11.8, 93893.0], [11.9, 94079.0], [12.0, 94087.0], [12.1, 94087.0], [12.2, 94167.0], [12.3, 94167.0], [12.4, 94195.0], [12.5, 94195.0], [12.6, 94199.0], [12.7, 94199.0], [12.8, 94219.0], [12.9, 94219.0], [13.0, 94243.0], [13.1, 94260.0], [13.2, 94260.0], [13.3, 94340.0], [13.4, 94340.0], [13.5, 94507.0], [13.6, 94507.0], [13.7, 94535.0], [13.8, 94535.0], [13.9, 94814.0], [14.0, 94876.0], [14.1, 94876.0], [14.2, 95060.0], [14.3, 95060.0], [14.4, 95142.0], [14.5, 95142.0], [14.6, 95170.0], [14.7, 95170.0], [14.8, 95173.0], [14.9, 95173.0], [15.0, 95364.0], [15.1, 95397.0], [15.2, 95397.0], [15.3, 95416.0], [15.4, 95416.0], [15.5, 95466.0], [15.6, 95466.0], [15.7, 95564.0], [15.8, 95564.0], [15.9, 95573.0], [16.0, 95582.0], [16.1, 95582.0], [16.2, 95628.0], [16.3, 95628.0], [16.4, 95714.0], [16.5, 95714.0], [16.6, 95774.0], [16.7, 95774.0], [16.8, 95797.0], [16.9, 95797.0], [17.0, 95904.0], [17.1, 95919.0], [17.2, 95919.0], [17.3, 96023.0], [17.4, 96023.0], [17.5, 96122.0], [17.6, 96122.0], [17.7, 96135.0], [17.8, 96135.0], [17.9, 96176.0], [18.0, 96176.0], [18.1, 96211.0], [18.2, 96220.0], [18.3, 96220.0], [18.4, 96239.0], [18.5, 96239.0], [18.6, 96430.0], [18.7, 96430.0], [18.8, 96515.0], [18.9, 96515.0], [19.0, 96834.0], [19.1, 96860.0], [19.2, 96860.0], [19.3, 96876.0], [19.4, 96876.0], [19.5, 96897.0], [19.6, 96897.0], [19.7, 96914.0], [19.8, 96914.0], [19.9, 97343.0], [20.0, 97343.0], [20.1, 97438.0], [20.2, 97498.0], [20.3, 97498.0], [20.4, 97744.0], [20.5, 97744.0], [20.6, 97805.0], [20.7, 97805.0], [20.8, 97815.0], [20.9, 97815.0], [21.0, 97943.0], [21.1, 98087.0], [21.2, 98087.0], [21.3, 98090.0], [21.4, 98090.0], [21.5, 98473.0], [21.6, 98473.0], [21.7, 98649.0], [21.8, 98649.0], [21.9, 98727.0], [22.0, 98727.0], [22.1, 98772.0], [22.2, 98809.0], [22.3, 98809.0], [22.4, 98825.0], [22.5, 98825.0], [22.6, 98945.0], [22.7, 98945.0], [22.8, 98970.0], [22.9, 98970.0], [23.0, 99164.0], [23.1, 99197.0], [23.2, 99197.0], [23.3, 99269.0], [23.4, 99269.0], [23.5, 99345.0], [23.6, 99345.0], [23.7, 99422.0], [23.8, 99422.0], [23.9, 99460.0], [24.0, 99460.0], [24.1, 99465.0], [24.2, 99475.0], [24.3, 99475.0], [24.4, 99482.0], [24.5, 99482.0], [24.6, 99617.0], [24.7, 99617.0], [24.8, 99690.0], [24.9, 99690.0], [25.0, 99706.0], [25.1, 99813.0], [25.2, 99813.0], [25.3, 99842.0], [25.4, 99842.0], [25.5, 100008.0], [25.6, 100008.0], [25.7, 100058.0], [25.8, 100058.0], [25.9, 100315.0], [26.0, 100315.0], [26.1, 100330.0], [26.2, 100369.0], [26.3, 100369.0], [26.4, 100483.0], [26.5, 100483.0], [26.6, 100517.0], [26.7, 100517.0], [26.8, 100586.0], [26.9, 100586.0], [27.0, 100617.0], [27.1, 100667.0], [27.2, 100667.0], [27.3, 100752.0], [27.4, 100752.0], [27.5, 100776.0], [27.6, 100776.0], [27.7, 100799.0], [27.8, 100799.0], [27.9, 100819.0], [28.0, 100819.0], [28.1, 101017.0], [28.2, 101024.0], [28.3, 101024.0], [28.4, 101088.0], [28.5, 101088.0], [28.6, 101275.0], [28.7, 101275.0], [28.8, 101345.0], [28.9, 101345.0], [29.0, 101356.0], [29.1, 101378.0], [29.2, 101378.0], [29.3, 101385.0], [29.4, 101385.0], [29.5, 101395.0], [29.6, 101395.0], [29.7, 101459.0], [29.8, 101459.0], [29.9, 101542.0], [30.0, 101542.0], [30.1, 101638.0], [30.2, 101681.0], [30.3, 101681.0], [30.4, 101683.0], [30.5, 101683.0], [30.6, 101697.0], [30.7, 101697.0], [30.8, 101715.0], [30.9, 101715.0], [31.0, 101750.0], [31.1, 101760.0], [31.2, 101760.0], [31.3, 101782.0], [31.4, 101782.0], [31.5, 101785.0], [31.6, 101785.0], [31.7, 101888.0], [31.8, 101888.0], [31.9, 101900.0], [32.0, 101900.0], [32.1, 101934.0], [32.2, 101937.0], [32.3, 101937.0], [32.4, 101976.0], [32.5, 101976.0], [32.6, 101984.0], [32.7, 101984.0], [32.8, 102004.0], [32.9, 102004.0], [33.0, 102012.0], [33.1, 102023.0], [33.2, 102023.0], [33.3, 102202.0], [33.4, 102202.0], [33.5, 102227.0], [33.6, 102227.0], [33.7, 102249.0], [33.8, 102249.0], [33.9, 102254.0], [34.0, 102254.0], [34.1, 102353.0], [34.2, 102454.0], [34.3, 102454.0], [34.4, 102480.0], [34.5, 102480.0], [34.6, 102496.0], [34.7, 102496.0], [34.8, 102500.0], [34.9, 102500.0], [35.0, 102532.0], [35.1, 102536.0], [35.2, 102536.0], [35.3, 102554.0], [35.4, 102554.0], [35.5, 102706.0], [35.6, 102706.0], [35.7, 102729.0], [35.8, 102729.0], [35.9, 102733.0], [36.0, 102733.0], [36.1, 102751.0], [36.2, 102759.0], [36.3, 102759.0], [36.4, 102777.0], [36.5, 102777.0], [36.6, 103232.0], [36.7, 103232.0], [36.8, 103266.0], [36.9, 103266.0], [37.0, 103273.0], [37.1, 103308.0], [37.2, 103308.0], [37.3, 103441.0], [37.4, 103441.0], [37.5, 103468.0], [37.6, 103468.0], [37.7, 103486.0], [37.8, 103486.0], [37.9, 103520.0], [38.0, 103520.0], [38.1, 103524.0], [38.2, 103593.0], [38.3, 103593.0], [38.4, 103628.0], [38.5, 103628.0], [38.6, 103833.0], [38.7, 103833.0], [38.8, 103915.0], [38.9, 103915.0], [39.0, 103938.0], [39.1, 103979.0], [39.2, 103979.0], [39.3, 104055.0], [39.4, 104055.0], [39.5, 104069.0], [39.6, 104069.0], [39.7, 104086.0], [39.8, 104086.0], [39.9, 104298.0], [40.0, 104298.0], [40.1, 104346.0], [40.2, 104669.0], [40.3, 104669.0], [40.4, 105039.0], [40.5, 105039.0], [40.6, 105371.0], [40.7, 105371.0], [40.8, 107111.0], [40.9, 107111.0], [41.0, 110502.0], [41.1, 110513.0], [41.2, 110513.0], [41.3, 110771.0], [41.4, 110771.0], [41.5, 111019.0], [41.6, 111019.0], [41.7, 111238.0], [41.8, 111238.0], [41.9, 111373.0], [42.0, 111373.0], [42.1, 111424.0], [42.2, 111448.0], [42.3, 111448.0], [42.4, 111736.0], [42.5, 111736.0], [42.6, 111749.0], [42.7, 111749.0], [42.8, 111925.0], [42.9, 111925.0], [43.0, 111966.0], [43.1, 111982.0], [43.2, 111982.0], [43.3, 112061.0], [43.4, 112061.0], [43.5, 112119.0], [43.6, 112119.0], [43.7, 112282.0], [43.8, 112282.0], [43.9, 112289.0], [44.0, 112289.0], [44.1, 112329.0], [44.2, 112434.0], [44.3, 112434.0], [44.4, 112620.0], [44.5, 112620.0], [44.6, 112745.0], [44.7, 112745.0], [44.8, 112808.0], [44.9, 112808.0], [45.0, 112841.0], [45.1, 113467.0], [45.2, 113467.0], [45.3, 115367.0], [45.4, 115367.0], [45.5, 115774.0], [45.6, 115774.0], [45.7, 116942.0], [45.8, 116942.0], [45.9, 119234.0], [46.0, 119592.0], [46.1, 119592.0], [46.2, 119663.0], [46.3, 119663.0], [46.4, 119761.0], [46.5, 119761.0], [46.6, 120050.0], [46.7, 120050.0], [46.8, 120105.0], [46.9, 120105.0], [47.0, 120147.0], [47.1, 120204.0], [47.2, 120204.0], [47.3, 120971.0], [47.4, 120971.0], [47.5, 121059.0], [47.6, 121059.0], [47.7, 121776.0], [47.8, 121776.0], [47.9, 122948.0], [48.0, 123022.0], [48.1, 123022.0], [48.2, 123109.0], [48.3, 123109.0], [48.4, 123348.0], [48.5, 123348.0], [48.6, 123352.0], [48.7, 123352.0], [48.8, 123437.0], [48.9, 123437.0], [49.0, 123497.0], [49.1, 124181.0], [49.2, 124181.0], [49.3, 124350.0], [49.4, 124350.0], [49.5, 124418.0], [49.6, 124418.0], [49.7, 124585.0], [49.8, 124585.0], [49.9, 125392.0], [50.0, 125402.0], [50.1, 125402.0], [50.2, 125513.0], [50.3, 125513.0], [50.4, 125595.0], [50.5, 125595.0], [50.6, 125654.0], [50.7, 125654.0], [50.8, 125782.0], [50.9, 125782.0], [51.0, 126095.0], [51.1, 126103.0], [51.2, 126103.0], [51.3, 126368.0], [51.4, 126368.0], [51.5, 126441.0], [51.6, 126441.0], [51.7, 126581.0], [51.8, 126581.0], [51.9, 126581.0], [52.0, 126800.0], [52.1, 126800.0], [52.2, 126866.0], [52.3, 126866.0], [52.4, 126934.0], [52.5, 126934.0], [52.6, 127150.0], [52.7, 127150.0], [52.8, 127152.0], [52.9, 127152.0], [53.0, 127304.0], [53.1, 127830.0], [53.2, 127830.0], [53.3, 127866.0], [53.4, 127866.0], [53.5, 127899.0], [53.6, 127899.0], [53.7, 127930.0], [53.8, 127930.0], [53.9, 127951.0], [54.0, 128331.0], [54.1, 128331.0], [54.2, 128427.0], [54.3, 128427.0], [54.4, 129539.0], [54.5, 129539.0], [54.6, 129833.0], [54.7, 129833.0], [54.8, 129890.0], [54.9, 129890.0], [55.0, 130018.0], [55.1, 130307.0], [55.2, 130307.0], [55.3, 130312.0], [55.4, 130312.0], [55.5, 130549.0], [55.6, 130549.0], [55.7, 130886.0], [55.8, 130886.0], [55.9, 130893.0], [56.0, 131356.0], [56.1, 131356.0], [56.2, 133051.0], [56.3, 133051.0], [56.4, 133111.0], [56.5, 133111.0], [56.6, 133216.0], [56.7, 133216.0], [56.8, 133355.0], [56.9, 133355.0], [57.0, 133598.0], [57.1, 133743.0], [57.2, 133743.0], [57.3, 134000.0], [57.4, 134000.0], [57.5, 134147.0], [57.6, 134147.0], [57.7, 134458.0], [57.8, 134458.0], [57.9, 134805.0], [58.0, 135462.0], [58.1, 135462.0], [58.2, 135806.0], [58.3, 135806.0], [58.4, 135953.0], [58.5, 135953.0], [58.6, 136128.0], [58.7, 136128.0], [58.8, 136503.0], [58.9, 136503.0], [59.0, 136510.0], [59.1, 136511.0], [59.2, 136511.0], [59.3, 137565.0], [59.4, 137565.0], [59.5, 137575.0], [59.6, 137575.0], [59.7, 137787.0], [59.8, 137787.0], [59.9, 137904.0], [60.0, 137971.0], [60.1, 137971.0], [60.2, 138033.0], [60.3, 138033.0], [60.4, 138086.0], [60.5, 138086.0], [60.6, 138710.0], [60.7, 138710.0], [60.8, 139021.0], [60.9, 139021.0], [61.0, 139402.0], [61.1, 139481.0], [61.2, 139481.0], [61.3, 139492.0], [61.4, 139492.0], [61.5, 139504.0], [61.6, 139504.0], [61.7, 139538.0], [61.8, 139538.0], [61.9, 139560.0], [62.0, 139580.0], [62.1, 139580.0], [62.2, 139686.0], [62.3, 139686.0], [62.4, 139696.0], [62.5, 139696.0], [62.6, 140107.0], [62.7, 140107.0], [62.8, 140121.0], [62.9, 140121.0], [63.0, 141387.0], [63.1, 141393.0], [63.2, 141393.0], [63.3, 141908.0], [63.4, 141908.0], [63.5, 143621.0], [63.6, 143621.0], [63.7, 145305.0], [63.8, 145305.0], [63.9, 146006.0], [64.0, 146599.0], [64.1, 146599.0], [64.2, 146994.0], [64.3, 146994.0], [64.4, 156765.0], [64.5, 156765.0], [64.6, 157349.0], [64.7, 157349.0], [64.8, 158596.0], [64.9, 158596.0], [65.0, 159162.0], [65.1, 159341.0], [65.2, 159341.0], [65.3, 159685.0], [65.4, 159685.0], [65.5, 160041.0], [65.6, 160041.0], [65.7, 160519.0], [65.8, 160519.0], [65.9, 163882.0], [66.0, 165972.0], [66.1, 165972.0], [66.2, 165985.0], [66.3, 165985.0], [66.4, 166154.0], [66.5, 166154.0], [66.6, 166494.0], [66.7, 166494.0], [66.8, 166635.0], [66.9, 166635.0], [67.0, 166660.0], [67.1, 166710.0], [67.2, 166710.0], [67.3, 166905.0], [67.4, 166905.0], [67.5, 166954.0], [67.6, 166954.0], [67.7, 167012.0], [67.8, 167012.0], [67.9, 167033.0], [68.0, 167140.0], [68.1, 167140.0], [68.2, 167366.0], [68.3, 167366.0], [68.4, 167455.0], [68.5, 167455.0], [68.6, 167620.0], [68.7, 167620.0], [68.8, 167696.0], [68.9, 167696.0], [69.0, 167890.0], [69.1, 167911.0], [69.2, 167911.0], [69.3, 168463.0], [69.4, 168463.0], [69.5, 168991.0], [69.6, 168991.0], [69.7, 169355.0], [69.8, 169355.0], [69.9, 169365.0], [70.0, 170118.0], [70.1, 170118.0], [70.2, 170415.0], [70.3, 170415.0], [70.4, 170503.0], [70.5, 170503.0], [70.6, 170513.0], [70.7, 170513.0], [70.8, 170548.0], [70.9, 170548.0], [71.0, 170772.0], [71.1, 170788.0], [71.2, 170788.0], [71.3, 170827.0], [71.4, 170827.0], [71.5, 170957.0], [71.6, 170957.0], [71.7, 171353.0], [71.8, 171353.0], [71.9, 172148.0], [72.0, 172148.0], [72.1, 172235.0], [72.2, 172254.0], [72.3, 172254.0], [72.4, 172349.0], [72.5, 172349.0], [72.6, 172474.0], [72.7, 172474.0], [72.8, 172545.0], [72.9, 172545.0], [73.0, 172697.0], [73.1, 172735.0], [73.2, 172735.0], [73.3, 172884.0], [73.4, 172884.0], [73.5, 172912.0], [73.6, 172912.0], [73.7, 172913.0], [73.8, 172913.0], [73.9, 172919.0], [74.0, 172919.0], [74.1, 172940.0], [74.2, 172956.0], [74.3, 172956.0], [74.4, 173040.0], [74.5, 173040.0], [74.6, 173042.0], [74.7, 173042.0], [74.8, 173070.0], [74.9, 173070.0], [75.0, 173167.0], [75.1, 173198.0], [75.2, 173198.0], [75.3, 173268.0], [75.4, 173268.0], [75.5, 173344.0], [75.6, 173344.0], [75.7, 173352.0], [75.8, 173352.0], [75.9, 173354.0], [76.0, 173354.0], [76.1, 173498.0], [76.2, 173505.0], [76.3, 173505.0], [76.4, 173524.0], [76.5, 173524.0], [76.6, 173534.0], [76.7, 173534.0], [76.8, 173699.0], [76.9, 173699.0], [77.0, 173741.0], [77.1, 173830.0], [77.2, 173830.0], [77.3, 173889.0], [77.4, 173889.0], [77.5, 174077.0], [77.6, 174077.0], [77.7, 174077.0], [77.8, 174077.0], [77.9, 174083.0], [78.0, 174083.0], [78.1, 174193.0], [78.2, 174240.0], [78.3, 174240.0], [78.4, 174317.0], [78.5, 174317.0], [78.6, 174350.0], [78.7, 174350.0], [78.8, 174438.0], [78.9, 174438.0], [79.0, 174595.0], [79.1, 174607.0], [79.2, 174607.0], [79.3, 174626.0], [79.4, 174626.0], [79.5, 174667.0], [79.6, 174667.0], [79.7, 174711.0], [79.8, 174711.0], [79.9, 174849.0], [80.0, 174849.0], [80.1, 174915.0], [80.2, 175103.0], [80.3, 175103.0], [80.4, 175133.0], [80.5, 175133.0], [80.6, 175205.0], [80.7, 175205.0], [80.8, 175261.0], [80.9, 175261.0], [81.0, 175332.0], [81.1, 175390.0], [81.2, 175390.0], [81.3, 175475.0], [81.4, 175475.0], [81.5, 175482.0], [81.6, 175482.0], [81.7, 175522.0], [81.8, 175522.0], [81.9, 175577.0], [82.0, 175577.0], [82.1, 175681.0], [82.2, 175810.0], [82.3, 175810.0], [82.4, 175820.0], [82.5, 175820.0], [82.6, 175868.0], [82.7, 175868.0], [82.8, 175936.0], [82.9, 175936.0], [83.0, 175989.0], [83.1, 175994.0], [83.2, 175994.0], [83.3, 176035.0], [83.4, 176035.0], [83.5, 176072.0], [83.6, 176072.0], [83.7, 176198.0], [83.8, 176198.0], [83.9, 176213.0], [84.0, 176213.0], [84.1, 176241.0], [84.2, 176243.0], [84.3, 176243.0], [84.4, 176277.0], [84.5, 176277.0], [84.6, 176341.0], [84.7, 176341.0], [84.8, 176378.0], [84.9, 176378.0], [85.0, 176380.0], [85.1, 176465.0], [85.2, 176465.0], [85.3, 176536.0], [85.4, 176536.0], [85.5, 176551.0], [85.6, 176551.0], [85.7, 176652.0], [85.8, 176652.0], [85.9, 176705.0], [86.0, 176705.0], [86.1, 176731.0], [86.2, 176752.0], [86.3, 176752.0], [86.4, 176783.0], [86.5, 176783.0], [86.6, 176878.0], [86.7, 176878.0], [86.8, 176886.0], [86.9, 176886.0], [87.0, 176969.0], [87.1, 176978.0], [87.2, 176978.0], [87.3, 177006.0], [87.4, 177006.0], [87.5, 177010.0], [87.6, 177010.0], [87.7, 177021.0], [87.8, 177021.0], [87.9, 177028.0], [88.0, 177028.0], [88.1, 177086.0], [88.2, 177099.0], [88.3, 177099.0], [88.4, 177137.0], [88.5, 177137.0], [88.6, 177152.0], [88.7, 177152.0], [88.8, 177169.0], [88.9, 177169.0], [89.0, 177265.0], [89.1, 177277.0], [89.2, 177277.0], [89.3, 177296.0], [89.4, 177296.0], [89.5, 177327.0], [89.6, 177327.0], [89.7, 177343.0], [89.8, 177343.0], [89.9, 177427.0], [90.0, 177427.0], [90.1, 177445.0], [90.2, 177470.0], [90.3, 177470.0], [90.4, 177521.0], [90.5, 177521.0], [90.6, 177617.0], [90.7, 177617.0], [90.8, 177634.0], [90.9, 177634.0], [91.0, 177658.0], [91.1, 177663.0], [91.2, 177663.0], [91.3, 177706.0], [91.4, 177706.0], [91.5, 177730.0], [91.6, 177730.0], [91.7, 177736.0], [91.8, 177736.0], [91.9, 177908.0], [92.0, 177908.0], [92.1, 177923.0], [92.2, 177935.0], [92.3, 177935.0], [92.4, 177943.0], [92.5, 177943.0], [92.6, 177947.0], [92.7, 177947.0], [92.8, 177978.0], [92.9, 177978.0], [93.0, 178033.0], [93.1, 178042.0], [93.2, 178042.0], [93.3, 178062.0], [93.4, 178062.0], [93.5, 178079.0], [93.6, 178079.0], [93.7, 178085.0], [93.8, 178085.0], [93.9, 178086.0], [94.0, 178086.0], [94.1, 178103.0], [94.2, 178148.0], [94.3, 178148.0], [94.4, 178178.0], [94.5, 178178.0], [94.6, 178200.0], [94.7, 178200.0], [94.8, 178204.0], [94.9, 178204.0], [95.0, 178219.0], [95.1, 178235.0], [95.2, 178235.0], [95.3, 178278.0], [95.4, 178278.0], [95.5, 178309.0], [95.6, 178309.0], [95.7, 178332.0], [95.8, 178332.0], [95.9, 178368.0], [96.0, 178368.0], [96.1, 178370.0], [96.2, 178372.0], [96.3, 178372.0], [96.4, 178429.0], [96.5, 178429.0], [96.6, 178434.0], [96.7, 178434.0], [96.8, 178607.0], [96.9, 178607.0], [97.0, 178671.0], [97.1, 178703.0], [97.2, 178703.0], [97.3, 178781.0], [97.4, 178781.0], [97.5, 178790.0], [97.6, 178790.0], [97.7, 178792.0], [97.8, 178792.0], [97.9, 178826.0], [98.0, 178826.0], [98.1, 178833.0], [98.2, 178851.0], [98.3, 178851.0], [98.4, 178852.0], [98.5, 178852.0], [98.6, 178886.0], [98.7, 178886.0], [98.8, 178890.0], [98.9, 178890.0], [99.0, 178900.0], [99.1, 178920.0], [99.2, 178920.0], [99.3, 178967.0], [99.4, 178967.0], [99.5, 179014.0], [99.6, 179014.0], [99.7, 179042.0], [99.8, 179042.0], [99.9, 179090.0], [100.0, 179090.0]], "isOverall": false, "label": "Create Issue User 550 Ramp 1", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 61.0, "series": [{"data": [[0.0, 50.0], [132000.0, 1.0], [133600.0, 1.0], [135200.0, 1.0], [136800.0, 1.0], [138400.0, 1.0], [165600.0, 1.0], [167200.0, 1.0], [170400.0, 1.0], [173600.0, 1.0], [176800.0, 3.0], [178400.0, 1.0], [131300.0, 1.0], [132900.0, 1.0], [134500.0, 1.0], [137700.0, 1.0], [139300.0, 1.0], [140900.0, 2.0], [172900.0, 1.0], [174500.0, 1.0], [176100.0, 1.0], [177700.0, 5.0], [96300.0, 1.0], [97900.0, 1.0], [95500.0, 1.0], [100300.0, 2.0], [98700.0, 2.0], [101900.0, 1.0], [99500.0, 1.0], [102700.0, 2.0], [110700.0, 4.0], [112300.0, 3.0], [111500.0, 4.0], [114700.0, 1.0], [116300.0, 1.0], [117100.0, 1.0], [120300.0, 1.0], [124300.0, 2.0], [126700.0, 1.0], [130700.0, 1.0], [132200.0, 1.0], [135400.0, 2.0], [137000.0, 2.0], [138600.0, 1.0], [170600.0, 1.0], [175400.0, 1.0], [178600.0, 2.0], [133100.0, 1.0], [137900.0, 1.0], [139500.0, 1.0], [168300.0, 1.0], [169900.0, 1.0], [173100.0, 2.0], [176300.0, 2.0], [177900.0, 4.0], [93800.0, 1.0], [97000.0, 1.0], [95400.0, 2.0], [98600.0, 2.0], [101000.0, 2.0], [99400.0, 3.0], [110600.0, 4.0], [111400.0, 2.0], [112200.0, 2.0], [117000.0, 1.0], [117800.0, 1.0], [121000.0, 1.0], [125800.0, 2.0], [128200.0, 1.0], [129800.0, 2.0], [130600.0, 1.0], [132400.0, 1.0], [159600.0, 1.0], [166000.0, 1.0], [169200.0, 2.0], [175600.0, 3.0], [177200.0, 5.0], [178800.0, 2.0], [133300.0, 1.0], [136500.0, 1.0], [139700.0, 1.0], [166900.0, 2.0], [173300.0, 2.0], [174900.0, 2.0], [176500.0, 6.0], [178100.0, 3.0], [97700.0, 1.0], [96100.0, 4.0], [94500.0, 1.0], [95300.0, 1.0], [100100.0, 1.0], [98500.0, 2.0], [99300.0, 1.0], [101700.0, 1.0], [102500.0, 1.0], [111300.0, 2.0], [112900.0, 1.0], [112100.0, 1.0], [115300.0, 1.0], [117700.0, 1.0], [118500.0, 4.0], [119300.0, 2.0], [120100.0, 1.0], [120900.0, 1.0], [126500.0, 1.0], [128100.0, 1.0], [130500.0, 1.0], [134200.0, 1.0], [135800.0, 2.0], [137400.0, 1.0], [159800.0, 1.0], [171000.0, 1.0], [172600.0, 2.0], [174200.0, 1.0], [175800.0, 1.0], [177400.0, 4.0], [179000.0, 2.0], [133500.0, 1.0], [136700.0, 1.0], [139900.0, 3.0], [143100.0, 1.0], [167100.0, 2.0], [171900.0, 1.0], [173500.0, 2.0], [175100.0, 1.0], [176700.0, 4.0], [178300.0, 2.0], [96000.0, 2.0], [100000.0, 1.0], [98400.0, 1.0], [101600.0, 1.0], [100800.0, 2.0], [102400.0, 1.0], [111200.0, 3.0], [112800.0, 1.0], [114400.0, 1.0], [112000.0, 1.0], [116000.0, 1.0], [119200.0, 1.0], [120000.0, 1.0], [120800.0, 1.0], [124000.0, 1.0], [127200.0, 2.0], [129600.0, 1.0], [131200.0, 1.0], [137600.0, 1.0], [160000.0, 1.0], [166400.0, 1.0], [171200.0, 1.0], [172800.0, 3.0], [174400.0, 1.0], [176000.0, 4.0], [177600.0, 3.0], [179200.0, 1.0], [143300.0, 1.0], [164100.0, 1.0], [167300.0, 2.0], [170500.0, 1.0], [172100.0, 2.0], [173700.0, 1.0], [175300.0, 1.0], [176900.0, 5.0], [95100.0, 4.0], [98300.0, 1.0], [95900.0, 1.0], [99900.0, 1.0], [101500.0, 2.0], [102300.0, 1.0], [99100.0, 2.0], [104700.0, 1.0], [111100.0, 2.0], [112700.0, 2.0], [113500.0, 1.0], [111900.0, 5.0], [115900.0, 1.0], [118300.0, 1.0], [125500.0, 2.0], [126300.0, 2.0], [160200.0, 1.0], [168200.0, 1.0], [169800.0, 1.0], [173000.0, 4.0], [174600.0, 3.0], [176200.0, 3.0], [177800.0, 1.0], [138700.0, 1.0], [159500.0, 1.0], [165900.0, 2.0], [167500.0, 1.0], [170700.0, 2.0], [175500.0, 1.0], [177100.0, 5.0], [94200.0, 2.0], [95000.0, 2.0], [97400.0, 5.0], [95800.0, 3.0], [99800.0, 2.0], [102200.0, 1.0], [100600.0, 3.0], [99000.0, 1.0], [101400.0, 2.0], [111000.0, 3.0], [111800.0, 1.0], [117400.0, 1.0], [119800.0, 1.0], [122200.0, 1.0], [123000.0, 1.0], [125400.0, 1.0], [130200.0, 1.0], [134800.0, 1.0], [138000.0, 1.0], [139600.0, 1.0], [166800.0, 3.0], [168400.0, 1.0], [171600.0, 1.0], [173200.0, 2.0], [176400.0, 3.0], [178000.0, 1.0], [132500.0, 1.0], [134100.0, 1.0], [138900.0, 2.0], [166100.0, 1.0], [170900.0, 1.0], [172500.0, 3.0], [174100.0, 1.0], [175700.0, 3.0], [177300.0, 1.0], [178900.0, 1.0], [94100.0, 1.0], [96500.0, 3.0], [99700.0, 1.0], [101300.0, 2.0], [98900.0, 1.0], [105300.0, 1.0], [110900.0, 3.0], [112500.0, 2.0], [111700.0, 5.0], [118100.0, 1.0], [130900.0, 1.0], [131800.0, 1.0], [135000.0, 1.0], [143000.0, 2.0], [167000.0, 2.0], [175000.0, 1.0], [176600.0, 1.0], [178200.0, 2.0], [131100.0, 1.0], [132700.0, 1.0], [134300.0, 1.0], [166300.0, 1.0], [172700.0, 1.0], [174300.0, 1.0], [175900.0, 2.0], [177500.0, 1.0], [94000.0, 3.0], [94800.0, 1.0], [98000.0, 2.0], [96400.0, 2.0], [95600.0, 2.0], [99600.0, 3.0], [100400.0, 1.0], [101200.0, 2.0], [110800.0, 3.0], [111600.0, 1.0], [113200.0, 1.0], [112400.0, 1.0], [119600.0, 2.0], [120400.0, 2.0], [121200.0, 1.0], [122800.0, 2.0], [123600.0, 1.0], [125200.0, 1.0], [126800.0, 1.0], [127600.0, 2.0], [130800.0, 1.0]], "isOverall": false, "label": "Create Issue User 500 Ramp 1", "isController": false}, {"data": [[0.0, 61.0], [170400.0, 1.0], [173600.0, 1.0], [175200.0, 2.0], [176800.0, 2.0], [178400.0, 2.0], [131300.0, 1.0], [136100.0, 1.0], [137700.0, 1.0], [158500.0, 1.0], [171300.0, 1.0], [172900.0, 5.0], [174500.0, 1.0], [176100.0, 1.0], [177700.0, 3.0], [97900.0, 1.0], [95500.0, 3.0], [98700.0, 2.0], [100300.0, 3.0], [101900.0, 5.0], [102700.0, 6.0], [103500.0, 3.0], [104300.0, 1.0], [110700.0, 1.0], [112300.0, 1.0], [119500.0, 1.0], [124300.0, 1.0], [128300.0, 1.0], [135400.0, 1.0], [167400.0, 1.0], [172200.0, 2.0], [173800.0, 2.0], [175400.0, 2.0], [177000.0, 6.0], [178600.0, 2.0], [133100.0, 1.0], [137900.0, 2.0], [139500.0, 4.0], [166700.0, 1.0], [173100.0, 2.0], [174700.0, 1.0], [176300.0, 3.0], [177900.0, 6.0], [93800.0, 4.0], [96200.0, 3.0], [97800.0, 2.0], [95400.0, 2.0], [98600.0, 1.0], [101000.0, 3.0], [101800.0, 1.0], [99400.0, 5.0], [103400.0, 3.0], [104200.0, 1.0], [105000.0, 1.0], [111400.0, 2.0], [112200.0, 2.0], [120200.0, 1.0], [121000.0, 1.0], [123400.0, 2.0], [129800.0, 2.0], [134000.0, 1.0], [143600.0, 1.0], [159600.0, 1.0], [167600.0, 2.0], [170800.0, 1.0], [172400.0, 1.0], [174000.0, 3.0], [175600.0, 1.0], [177200.0, 3.0], [178800.0, 6.0], [133300.0, 1.0], [136500.0, 3.0], [141300.0, 2.0], [157300.0, 1.0], [160500.0, 1.0], [166900.0, 2.0], [170100.0, 1.0], [173300.0, 3.0], [174900.0, 1.0], [176500.0, 2.0], [178100.0, 3.0], [96100.0, 3.0], [94500.0, 2.0], [97700.0, 1.0], [96900.0, 1.0], [95300.0, 2.0], [99300.0, 1.0], [101700.0, 5.0], [102500.0, 4.0], [103300.0, 1.0], [110500.0, 2.0], [111300.0, 1.0], [112100.0, 1.0], [115300.0, 1.0], [116900.0, 1.0], [120100.0, 2.0], [120900.0, 1.0], [121700.0, 1.0], [123300.0, 2.0], [124100.0, 1.0], [125700.0, 1.0], [126500.0, 2.0], [127300.0, 1.0], [130500.0, 1.0], [135800.0, 1.0], [139000.0, 1.0], [167800.0, 1.0], [172600.0, 1.0], [174200.0, 1.0], [175800.0, 3.0], [177400.0, 3.0], [179000.0, 3.0], [133500.0, 1.0], [159100.0, 1.0], [167100.0, 1.0], [173500.0, 3.0], [175100.0, 2.0], [176700.0, 4.0], [178300.0, 5.0], [96000.0, 1.0], [96800.0, 4.0], [101600.0, 4.0], [99200.0, 1.0], [98400.0, 1.0], [100000.0, 2.0], [100800.0, 1.0], [102400.0, 3.0], [103200.0, 3.0], [104000.0, 3.0], [111200.0, 1.0], [112000.0, 1.0], [112800.0, 2.0], [119200.0, 1.0], [120000.0, 1.0], [125600.0, 1.0], [126400.0, 1.0], [134400.0, 1.0], [160000.0, 1.0], [166400.0, 1.0], [172800.0, 1.0], [174400.0, 1.0], [176000.0, 2.0], [177600.0, 4.0], [133700.0, 1.0], [140100.0, 2.0], [146500.0, 1.0], [159300.0, 1.0], [167300.0, 1.0], [168900.0, 1.0], [170500.0, 3.0], [172100.0, 1.0], [173700.0, 1.0], [175300.0, 2.0], [176900.0, 2.0], [95100.0, 3.0], [94300.0, 1.0], [95900.0, 2.0], [100700.0, 3.0], [101500.0, 1.0], [102300.0, 1.0], [99100.0, 2.0], [103900.0, 3.0], [107100.0, 1.0], [111900.0, 3.0], [112700.0, 1.0], [123100.0, 1.0], [125500.0, 2.0], [126300.0, 1.0], [127900.0, 2.0], [127100.0, 2.0], [129500.0, 1.0], [130300.0, 2.0], [133000.0, 1.0], [139400.0, 3.0], [166600.0, 2.0], [173000.0, 3.0], [174600.0, 3.0], [176200.0, 4.0], [138700.0, 1.0], [141900.0, 1.0], [165900.0, 2.0], [170700.0, 2.0], [172300.0, 1.0], [175500.0, 2.0], [177100.0, 3.0], [178700.0, 4.0], [94200.0, 3.0], [97400.0, 2.0], [95000.0, 1.0], [99800.0, 2.0], [100600.0, 2.0], [101400.0, 1.0], [102200.0, 4.0], [103800.0, 1.0], [104600.0, 1.0], [111000.0, 1.0], [112600.0, 1.0], [113400.0, 1.0], [123000.0, 1.0], [125400.0, 1.0], [127800.0, 3.0], [133200.0, 1.0], [134800.0, 1.0], [138000.0, 2.0], [139600.0, 2.0], [146000.0, 1.0], [168400.0, 1.0], [173200.0, 1.0], [174800.0, 1.0], [176400.0, 1.0], [178000.0, 6.0], [134100.0, 1.0], [145300.0, 1.0], [146900.0, 1.0], [166100.0, 1.0], [169300.0, 2.0], [170900.0, 1.0], [172500.0, 1.0], [174100.0, 1.0], [177300.0, 2.0], [178900.0, 3.0], [94100.0, 3.0], [95700.0, 3.0], [97300.0, 1.0], [96500.0, 1.0], [99700.0, 1.0], [101300.0, 5.0], [100500.0, 2.0], [98900.0, 2.0], [105300.0, 1.0], [111700.0, 2.0], [115700.0, 1.0], [119700.0, 1.0], [126100.0, 1.0], [122900.0, 1.0], [124500.0, 1.0], [125300.0, 1.0], [126900.0, 1.0], [163800.0, 1.0], [167000.0, 2.0], [173400.0, 1.0], [176600.0, 1.0], [178200.0, 5.0], [135900.0, 1.0], [137500.0, 2.0], [156700.0, 1.0], [167900.0, 1.0], [172700.0, 1.0], [174300.0, 2.0], [175900.0, 3.0], [177500.0, 1.0], [94000.0, 2.0], [98000.0, 2.0], [96400.0, 1.0], [94800.0, 2.0], [95600.0, 1.0], [98800.0, 2.0], [101200.0, 1.0], [100400.0, 1.0], [102000.0, 3.0], [99600.0, 2.0], [103600.0, 1.0], [112400.0, 1.0], [119600.0, 1.0], [124400.0, 1.0], [126000.0, 1.0], [126800.0, 2.0], [128400.0, 1.0], [130000.0, 1.0], [130800.0, 2.0]], "isOverall": false, "label": "Create Issue User 550 Ramp 1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 179200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 111.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 939.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 939.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 111.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 86.0, "minX": 1.71585144E12, "maxY": 520.4098360655737, "series": [{"data": [[1.71585156E12, 311.0], [1.71585162E12, 86.0], [1.71585144E12, 476.0]], "isOverall": false, "label": "User 500 Ramp 1", "isController": false}, {"data": [[1.71585156E12, 343.0], [1.71585162E12, 98.5], [1.71585144E12, 520.4098360655737]], "isOverall": false, "label": "User 550 Ramp 1", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71585162E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 179288.0, "series": [{"data": [[14.0, 179005.0], [15.0, 178995.0], [17.0, 178821.0], [22.0, 179035.0], [23.0, 178848.0], [24.0, 178633.0], [25.0, 178651.0], [37.0, 178422.0], [39.0, 178327.0], [40.0, 178395.0], [47.0, 178259.0], [48.0, 178130.0], [50.0, 178127.0], [52.0, 178182.0], [56.0, 178064.0], [59.0, 177971.0], [60.0, 177925.0], [66.0, 177937.0], [65.0, 178297.0], [69.0, 177778.0], [75.0, 177617.0], [74.0, 177910.0], [73.0, 177720.0], [72.0, 177818.0], [79.0, 177636.0], [78.0, 177710.0], [77.0, 177627.0], [83.0, 177744.0], [82.0, 177715.0], [86.0, 177470.0], [85.0, 177541.0], [90.0, 177456.0], [94.0, 177273.0], [92.0, 177429.0], [98.0, 177203.0], [97.0, 177328.0], [96.0, 177230.0], [103.0, 177128.0], [101.0, 177422.0], [100.0, 177151.0], [107.0, 177260.0], [111.0, 176995.0], [110.0, 177148.0], [115.0, 177166.0], [114.0, 177143.0], [113.0, 176995.0], [119.0, 177214.0], [118.0, 176891.0], [123.0, 176958.0], [122.0, 176945.0], [127.0, 176872.0], [125.0, 176996.0], [135.0, 176683.0], [134.0, 176552.0], [130.0, 176883.0], [129.0, 176767.0], [143.0, 176538.0], [142.0, 176506.0], [141.0, 176755.0], [140.0, 176597.0], [139.0, 176524.0], [138.0, 176773.0], [137.0, 176448.0], [136.0, 176708.0], [150.0, 176394.0], [147.0, 176578.0], [146.0, 176478.0], [145.0, 176491.0], [159.0, 176241.0], [157.0, 176212.0], [154.0, 176302.0], [167.0, 176063.0], [162.0, 176132.0], [160.0, 176278.0], [175.0, 175893.0], [172.0, 175988.0], [171.0, 176019.0], [169.0, 176050.0], [182.0, 175688.0], [181.0, 175741.0], [180.0, 175704.0], [178.0, 175919.0], [176.0, 176000.0], [188.0, 175470.0], [187.0, 175344.0], [186.0, 175706.0], [185.0, 175684.0], [184.0, 175654.0], [199.0, 175159.0], [193.0, 175531.0], [207.0, 174629.0], [204.0, 174900.0], [203.0, 175056.0], [201.0, 174922.0], [215.0, 174421.0], [209.0, 174685.0], [208.0, 174608.0], [222.0, 174138.0], [220.0, 174291.0], [217.0, 174367.0], [216.0, 174501.0], [228.0, 173738.0], [239.0, 173205.0], [236.0, 173633.0], [235.0, 173562.0], [232.0, 173589.0], [247.0, 173119.0], [246.0, 173254.0], [242.0, 173376.0], [241.0, 173304.0], [255.0, 173048.0], [253.0, 173002.0], [252.0, 173025.0], [251.0, 173030.0], [249.0, 173142.0], [271.0, 172629.0], [268.0, 172788.0], [264.0, 172843.0], [262.0, 172890.0], [261.0, 172924.0], [259.0, 172829.0], [285.0, 171685.0], [287.0, 171091.0], [284.0, 171978.0], [283.0, 172186.0], [282.0, 172106.0], [277.0, 172549.0], [276.0, 172513.0], [274.0, 172665.0], [273.0, 172576.0], [302.0, 170484.0], [298.0, 170599.0], [297.0, 170695.0], [296.0, 170701.0], [294.0, 170744.0], [289.0, 170932.0], [288.0, 171205.0], [314.0, 168287.0], [313.0, 168432.0], [311.0, 168365.0], [309.0, 169291.0], [306.0, 169283.0], [305.0, 169859.0], [304.0, 169927.0], [334.0, 166956.0], [333.0, 166886.0], [331.0, 167089.0], [328.0, 167056.0], [327.0, 167133.0], [326.0, 167101.0], [325.0, 167206.0], [324.0, 167316.0], [321.0, 167365.0], [320.0, 167533.0], [349.0, 165993.0], [350.0, 166070.0], [348.0, 165965.0], [345.0, 166195.0], [344.0, 166333.0], [343.0, 166449.0], [338.0, 166850.0], [337.0, 166832.0], [336.0, 166905.0], [362.0, 159605.0], [361.0, 159580.0], [359.0, 159824.0], [357.0, 160081.0], [356.0, 160241.0], [353.0, 164142.0], [352.0, 165601.0], [381.0, 140995.0], [380.0, 140981.0], [376.0, 143055.0], [375.0, 143054.0], [374.0, 143123.0], [373.0, 143396.0], [398.0, 139334.0], [391.0, 139597.0], [388.0, 139600.0], [387.0, 139786.0], [386.0, 139989.0], [385.0, 139905.0], [384.0, 139998.0], [414.0, 137672.0], [413.0, 137739.0], [410.0, 137905.0], [408.0, 138065.0], [406.0, 138453.0], [405.0, 138671.0], [404.0, 138728.0], [402.0, 138946.0], [401.0, 138955.0], [430.0, 135839.0], [429.0, 135804.0], [423.0, 136583.0], [422.0, 136756.0], [421.0, 136815.0], [420.0, 137005.0], [419.0, 137089.0], [418.0, 137453.0], [447.0, 133674.0], [443.0, 134164.0], [442.0, 134286.0], [441.0, 134342.0], [439.0, 134528.0], [432.0, 135493.0], [437.0, 134870.0], [436.0, 135096.0], [435.0, 135207.0], [434.0, 135458.0], [462.0, 131877.0], [463.0, 131372.0], [461.0, 132090.0], [460.0, 132287.0], [459.0, 132448.0], [458.0, 132550.0], [457.0, 132764.0], [456.0, 132932.0], [454.0, 133124.0], [450.0, 133372.0], [449.0, 133541.0], [477.0, 130266.0], [474.0, 130532.0], [472.0, 130616.0], [470.0, 130768.0], [468.0, 130880.0], [467.0, 131153.0], [466.0, 131288.0], [465.0, 130953.0], [491.0, 128111.0], [489.0, 128251.0], [483.0, 129826.0], [482.0, 129693.0], [480.0, 129895.0], [508.0, 126534.0], [505.0, 126755.0], [503.0, 126855.0], [500.0, 127210.0], [499.0, 127235.0], [498.0, 127669.0], [497.0, 127635.0], [539.0, 123039.0], [543.0, 122860.0], [538.0, 123652.0], [518.0, 125891.0], [516.0, 125892.0], [513.0, 126318.0], [512.0, 126321.0], [533.0, 124045.0], [531.0, 124394.0], [530.0, 124356.0], [528.0, 125244.0], [524.0, 125420.0], [521.0, 125506.0], [520.0, 125507.0], [574.0, 118560.0], [575.0, 118527.0], [560.0, 120187.0], [563.0, 119618.0], [562.0, 119606.0], [573.0, 118572.0], [572.0, 118561.0], [571.0, 119303.0], [570.0, 119345.0], [568.0, 119267.0], [551.0, 120837.0], [550.0, 120996.0], [548.0, 121003.0], [546.0, 122254.0], [544.0, 122814.0], [557.0, 120314.0], [554.0, 120430.0], [553.0, 120425.0], [552.0, 121297.0], [567.0, 119895.0], [564.0, 120085.0], [603.0, 112585.0], [594.0, 113255.0], [605.0, 112488.0], [607.0, 112349.0], [592.0, 113588.0], [604.0, 112546.0], [601.0, 112720.0], [582.0, 117074.0], [581.0, 117121.0], [580.0, 117499.0], [579.0, 117720.0], [578.0, 117888.0], [577.0, 118148.0], [576.0, 118347.0], [591.0, 114405.0], [590.0, 114786.0], [589.0, 115373.0], [586.0, 115920.0], [585.0, 116093.0], [584.0, 116371.0], [599.0, 112797.0], [597.0, 112829.0], [595.0, 112971.0], [638.0, 111529.0], [639.0, 111488.0], [626.0, 111910.0], [624.0, 111905.0], [628.0, 111790.0], [627.0, 111852.0], [637.0, 111541.0], [636.0, 111546.0], [635.0, 111618.0], [633.0, 111745.0], [632.0, 111752.0], [615.0, 112105.0], [614.0, 112267.0], [612.0, 112299.0], [611.0, 112305.0], [608.0, 112336.0], [623.0, 111950.0], [622.0, 111962.0], [620.0, 111983.0], [618.0, 112025.0], [630.0, 111774.0], [629.0, 111782.0], [666.0, 110761.0], [670.0, 110609.0], [671.0, 110600.0], [657.0, 110986.0], [659.0, 110935.0], [658.0, 110977.0], [661.0, 110881.0], [660.0, 110890.0], [669.0, 110637.0], [668.0, 110635.0], [667.0, 110717.0], [664.0, 110782.0], [647.0, 111255.0], [646.0, 111305.0], [645.0, 111312.0], [641.0, 111490.0], [640.0, 111506.0], [655.0, 111026.0], [654.0, 111035.0], [653.0, 111047.0], [652.0, 111108.0], [651.0, 111144.0], [650.0, 111205.0], [648.0, 111272.0], [663.0, 110797.0], [662.0, 110803.0], [683.0, 104760.0], [676.0, 105348.0], [729.0, 102509.0], [723.0, 102763.0], [722.0, 102725.0], [753.0, 101276.0], [766.0, 101510.0], [764.0, 100833.0], [763.0, 100856.0], [761.0, 101647.0], [751.0, 101316.0], [736.0, 102368.0], [741.0, 101581.0], [737.0, 102475.0], [743.0, 101429.0], [742.0, 102215.0], [750.0, 101338.0], [744.0, 101416.0], [758.0, 101748.0], [757.0, 101055.0], [756.0, 101065.0], [752.0, 101976.0], [798.0, 99692.0], [799.0, 99663.0], [795.0, 99792.0], [793.0, 99828.0], [791.0, 99870.0], [790.0, 99986.0], [786.0, 100087.0], [785.0, 100104.0], [782.0, 100347.0], [771.0, 100649.0], [770.0, 100657.0], [774.0, 101271.0], [772.0, 100643.0], [781.0, 100354.0], [779.0, 100475.0], [827.0, 98657.0], [830.0, 98592.0], [826.0, 98668.0], [806.0, 99442.0], [805.0, 99443.0], [801.0, 99561.0], [800.0, 99636.0], [823.0, 99364.0], [821.0, 98790.0], [817.0, 98918.0], [813.0, 99090.0], [812.0, 99130.0], [810.0, 99183.0], [808.0, 99416.0], [859.0, 96529.0], [862.0, 96493.0], [863.0, 96506.0], [861.0, 96523.0], [857.0, 97453.0], [856.0, 97470.0], [850.0, 97424.0], [848.0, 97465.0], [846.0, 97488.0], [833.0, 98772.0], [832.0, 98454.0], [836.0, 98006.0], [835.0, 98063.0], [838.0, 97962.0], [837.0, 98597.0], [843.0, 98393.0], [842.0, 97786.0], [894.0, 95551.0], [895.0, 95431.0], [892.0, 96131.0], [891.0, 95615.0], [889.0, 95680.0], [871.0, 96191.0], [867.0, 96325.0], [865.0, 97081.0], [864.0, 96486.0], [879.0, 96014.0], [877.0, 96042.0], [875.0, 96121.0], [873.0, 96164.0], [885.0, 95851.0], [884.0, 95868.0], [883.0, 95896.0], [880.0, 95998.0], [903.0, 95131.0], [924.0, 94236.0], [921.0, 94275.0], [917.0, 94563.0], [912.0, 94894.0], [910.0, 95021.0], [907.0, 95081.0], [905.0, 95102.0], [904.0, 95122.0], [902.0, 95148.0], [899.0, 95358.0], [896.0, 95417.0], [956.0, 3.0], [952.0, 2.0], [950.0, 3.0], [936.0, 93882.0], [934.0, 94021.0], [933.0, 94046.0], [932.0, 94062.0], [928.0, 94174.0], [986.0, 1.0], [989.0, 2.0], [985.0, 2.0], [966.0, 2.0], [964.0, 11.0], [960.0, 2.75], [983.0, 2.0], [981.0, 1.0], [977.0, 1.0], [976.0, 2.0], [973.0, 2.0], [972.0, 2.0], [971.0, 2.0], [970.0, 2.0], [1020.0, 1.0], [1022.0, 1.0], [1018.0, 1.0], [1016.0, 1.0], [1015.0, 1.0], [1012.0, 1.5], [1008.0, 2.0], [1006.0, 2.0], [995.0, 2.0], [992.0, 1.5], [999.0, 1.0], [997.0, 2.0], [1004.0, 2.0], [1002.0, 2.0], [1000.0, 1.0], [1050.0, 1.0], [1037.0, 1.0], [1034.0, 1.0], [1032.0, 1.0], [1030.0, 1.0], [1028.0, 1.0], [1026.0, 1.0], [1024.0, 1.0], [1.0, 179288.0]], "isOverall": false, "label": "Create Issue User 500 Ramp 1", "isController": false}, {"data": [[524.1480000000004, 123168.82800000004]], "isOverall": false, "label": "Create Issue User 500 Ramp 1-Aggregated", "isController": false}, {"data": [[2.0, 179042.0], [3.0, 178920.0], [4.0, 178851.0], [5.0, 178886.0], [6.0, 178890.0], [7.0, 178833.0], [8.0, 178792.0], [9.0, 178781.0], [10.0, 179090.0], [11.0, 178967.0], [12.0, 179014.0], [13.0, 178671.0], [16.0, 178826.0], [18.0, 178790.0], [19.0, 178900.0], [20.0, 178607.0], [21.0, 178852.0], [26.0, 178434.0], [27.0, 178372.0], [28.0, 178703.0], [29.0, 178370.0], [30.0, 178368.0], [31.0, 178429.0], [33.0, 178219.0], [32.0, 178278.0], [35.0, 178148.0], [34.0, 178235.0], [36.0, 178200.0], [38.0, 178079.0], [41.0, 178062.0], [43.0, 177935.0], [42.0, 178042.0], [45.0, 178033.0], [44.0, 178178.0], [46.0, 178204.0], [49.0, 178332.0], [51.0, 177943.0], [53.0, 178309.0], [55.0, 177736.0], [54.0, 178086.0], [57.0, 177978.0], [58.0, 178103.0], [61.0, 177923.0], [63.0, 177706.0], [62.0, 177947.0], [67.0, 177617.0], [64.0, 177658.0], [71.0, 177730.0], [70.0, 177908.0], [68.0, 178085.0], [76.0, 177634.0], [81.0, 177265.0], [80.0, 177343.0], [87.0, 177427.0], [84.0, 177445.0], [91.0, 177099.0], [89.0, 177521.0], [88.0, 177663.0], [95.0, 177470.0], [93.0, 177086.0], [99.0, 177296.0], [102.0, 177277.0], [106.0, 177327.0], [105.0, 177152.0], [104.0, 176969.0], [109.0, 176978.0], [108.0, 177169.0], [112.0, 177006.0], [117.0, 176886.0], [116.0, 177028.0], [121.0, 177021.0], [120.0, 176878.0], [126.0, 176705.0], [124.0, 177137.0], [133.0, 176731.0], [132.0, 176783.0], [131.0, 176752.0], [128.0, 177010.0], [151.0, 176341.0], [149.0, 176652.0], [148.0, 176465.0], [144.0, 176551.0], [158.0, 176243.0], [156.0, 176277.0], [155.0, 176536.0], [153.0, 176378.0], [152.0, 176380.0], [166.0, 176213.0], [165.0, 176198.0], [164.0, 176035.0], [163.0, 176072.0], [161.0, 176241.0], [174.0, 175868.0], [173.0, 175936.0], [170.0, 175994.0], [168.0, 175989.0], [183.0, 175820.0], [179.0, 175681.0], [177.0, 175810.0], [191.0, 175522.0], [190.0, 175475.0], [189.0, 175577.0], [198.0, 175133.0], [197.0, 175205.0], [196.0, 175261.0], [195.0, 175332.0], [194.0, 175482.0], [192.0, 175390.0], [206.0, 174667.0], [205.0, 174849.0], [202.0, 174915.0], [200.0, 175103.0], [214.0, 174350.0], [213.0, 174626.0], [212.0, 174595.0], [211.0, 174607.0], [210.0, 174711.0], [223.0, 174077.0], [221.0, 174317.0], [219.0, 174240.0], [218.0, 174438.0], [231.0, 173741.0], [230.0, 173699.0], [229.0, 173830.0], [227.0, 173889.0], [226.0, 174083.0], [225.0, 174193.0], [224.0, 174077.0], [238.0, 173344.0], [237.0, 173505.0], [234.0, 173534.0], [233.0, 173524.0], [245.0, 173268.0], [244.0, 173352.0], [243.0, 173498.0], [240.0, 173354.0], [254.0, 172919.0], [250.0, 173198.0], [248.0, 173070.0], [258.0, 172940.0], [270.0, 172735.0], [269.0, 172697.0], [267.0, 172884.0], [266.0, 173040.0], [265.0, 172912.0], [263.0, 172956.0], [260.0, 172913.0], [257.0, 173042.0], [256.0, 173167.0], [286.0, 171353.0], [281.0, 172148.0], [280.0, 172254.0], [279.0, 172349.0], [278.0, 172235.0], [275.0, 172545.0], [272.0, 172474.0], [301.0, 170415.0], [303.0, 170118.0], [300.0, 170513.0], [299.0, 170503.0], [295.0, 170548.0], [293.0, 170772.0], [292.0, 170788.0], [291.0, 170827.0], [290.0, 170957.0], [318.0, 167620.0], [319.0, 167455.0], [317.0, 167890.0], [316.0, 167696.0], [315.0, 167911.0], [312.0, 168463.0], [310.0, 168991.0], [308.0, 169355.0], [307.0, 169365.0], [335.0, 166954.0], [332.0, 166905.0], [330.0, 167012.0], [329.0, 167033.0], [323.0, 167366.0], [322.0, 167140.0], [351.0, 165985.0], [347.0, 165972.0], [346.0, 166154.0], [342.0, 166494.0], [341.0, 166660.0], [340.0, 166635.0], [339.0, 166710.0], [366.0, 157349.0], [367.0, 156765.0], [365.0, 158596.0], [364.0, 159162.0], [363.0, 159341.0], [360.0, 159685.0], [358.0, 160041.0], [355.0, 160519.0], [354.0, 163882.0], [371.0, 145305.0], [383.0, 140107.0], [382.0, 140121.0], [379.0, 141393.0], [378.0, 141387.0], [377.0, 141908.0], [372.0, 143621.0], [368.0, 146994.0], [370.0, 146006.0], [369.0, 146599.0], [397.0, 139538.0], [399.0, 139402.0], [396.0, 139492.0], [395.0, 139481.0], [394.0, 139580.0], [393.0, 139504.0], [392.0, 139560.0], [390.0, 139686.0], [389.0, 139696.0], [415.0, 137787.0], [412.0, 137904.0], [411.0, 138033.0], [409.0, 137971.0], [407.0, 138086.0], [403.0, 138710.0], [400.0, 139021.0], [431.0, 135806.0], [428.0, 135953.0], [427.0, 136128.0], [426.0, 136510.0], [425.0, 136503.0], [424.0, 136511.0], [417.0, 137575.0], [416.0, 137565.0], [446.0, 133743.0], [445.0, 134000.0], [444.0, 134147.0], [440.0, 134458.0], [438.0, 134805.0], [433.0, 135462.0], [455.0, 133051.0], [453.0, 133111.0], [452.0, 133216.0], [451.0, 133355.0], [448.0, 133598.0], [479.0, 129890.0], [478.0, 130018.0], [476.0, 130307.0], [475.0, 130312.0], [473.0, 130549.0], [471.0, 130886.0], [469.0, 130893.0], [464.0, 131356.0], [492.0, 127150.0], [494.0, 127930.0], [495.0, 127951.0], [493.0, 127152.0], [490.0, 127304.0], [488.0, 127830.0], [487.0, 127866.0], [481.0, 129833.0], [486.0, 128331.0], [485.0, 128427.0], [484.0, 129539.0], [510.0, 126368.0], [511.0, 126441.0], [509.0, 125595.0], [507.0, 126581.0], [506.0, 126581.0], [504.0, 126800.0], [502.0, 126934.0], [501.0, 126866.0], [496.0, 127899.0], [541.0, 123497.0], [542.0, 123348.0], [540.0, 123437.0], [537.0, 122948.0], [536.0, 123022.0], [519.0, 125654.0], [517.0, 125782.0], [515.0, 126095.0], [514.0, 126103.0], [527.0, 124585.0], [526.0, 124418.0], [525.0, 125402.0], [523.0, 125392.0], [522.0, 125513.0], [535.0, 123109.0], [534.0, 123352.0], [532.0, 124181.0], [529.0, 124350.0], [569.0, 119761.0], [566.0, 119234.0], [565.0, 120050.0], [561.0, 120105.0], [559.0, 119663.0], [545.0, 121776.0], [558.0, 119592.0], [556.0, 120147.0], [555.0, 120204.0], [549.0, 120971.0], [547.0, 121059.0], [602.0, 112620.0], [606.0, 112434.0], [600.0, 112745.0], [598.0, 112808.0], [596.0, 112841.0], [593.0, 113467.0], [588.0, 115367.0], [587.0, 115774.0], [583.0, 116942.0], [613.0, 112282.0], [625.0, 111925.0], [634.0, 111736.0], [631.0, 111749.0], [621.0, 111966.0], [619.0, 111982.0], [617.0, 112061.0], [616.0, 112119.0], [610.0, 112289.0], [609.0, 112329.0], [665.0, 110771.0], [656.0, 111019.0], [649.0, 111238.0], [644.0, 111373.0], [643.0, 111448.0], [642.0, 111424.0], [700.0, 102777.0], [703.0, 102729.0], [689.0, 103468.0], [688.0, 103486.0], [691.0, 104298.0], [690.0, 104346.0], [693.0, 103308.0], [692.0, 103441.0], [702.0, 102733.0], [701.0, 102751.0], [699.0, 103593.0], [698.0, 103628.0], [697.0, 103833.0], [696.0, 103232.0], [687.0, 103520.0], [672.0, 110502.0], [674.0, 107111.0], [673.0, 110513.0], [677.0, 105039.0], [675.0, 105371.0], [679.0, 104055.0], [678.0, 104086.0], [686.0, 103524.0], [685.0, 104669.0], [684.0, 103915.0], [682.0, 103938.0], [681.0, 103979.0], [680.0, 104069.0], [695.0, 103266.0], [694.0, 103273.0], [730.0, 101760.0], [734.0, 101683.0], [735.0, 101681.0], [721.0, 102759.0], [720.0, 101976.0], [725.0, 101934.0], [724.0, 101937.0], [733.0, 101697.0], [732.0, 101715.0], [731.0, 101750.0], [728.0, 101782.0], [711.0, 102454.0], [710.0, 102496.0], [709.0, 102480.0], [708.0, 102500.0], [707.0, 102536.0], [706.0, 102532.0], [705.0, 102554.0], [704.0, 102706.0], [719.0, 101984.0], [718.0, 102004.0], [717.0, 102023.0], [716.0, 102012.0], [715.0, 102202.0], [714.0, 102227.0], [713.0, 102249.0], [712.0, 102254.0], [727.0, 101888.0], [726.0, 101900.0], [765.0, 100819.0], [767.0, 100799.0], [762.0, 101459.0], [760.0, 101017.0], [759.0, 101024.0], [755.0, 101088.0], [754.0, 101785.0], [749.0, 101345.0], [738.0, 101638.0], [740.0, 102353.0], [739.0, 101542.0], [748.0, 101356.0], [747.0, 101378.0], [746.0, 101385.0], [745.0, 101395.0], [796.0, 99706.0], [797.0, 99690.0], [794.0, 99813.0], [792.0, 99842.0], [789.0, 100008.0], [788.0, 100058.0], [787.0, 100752.0], [784.0, 100315.0], [783.0, 100330.0], [769.0, 100667.0], [768.0, 100776.0], [775.0, 100586.0], [773.0, 100617.0], [780.0, 100369.0], [778.0, 100483.0], [777.0, 100517.0], [776.0, 101275.0], [818.0, 99465.0], [829.0, 99269.0], [831.0, 98473.0], [816.0, 98945.0], [828.0, 98649.0], [825.0, 98727.0], [824.0, 99345.0], [807.0, 99422.0], [804.0, 99460.0], [803.0, 99475.0], [802.0, 99482.0], [815.0, 98970.0], [814.0, 99617.0], [811.0, 99164.0], [809.0, 99197.0], [822.0, 98772.0], [820.0, 98809.0], [819.0, 98825.0], [852.0, 96897.0], [860.0, 96515.0], [858.0, 97343.0], [839.0, 97943.0], [834.0, 98087.0], [855.0, 96834.0], [854.0, 96860.0], [853.0, 96876.0], [851.0, 96914.0], [849.0, 97438.0], [847.0, 98090.0], [845.0, 97498.0], [844.0, 97744.0], [841.0, 97805.0], [840.0, 97815.0], [890.0, 95628.0], [893.0, 95582.0], [888.0, 95714.0], [870.0, 96211.0], [869.0, 96220.0], [868.0, 96239.0], [866.0, 96430.0], [887.0, 95774.0], [886.0, 95797.0], [882.0, 95904.0], [881.0, 95919.0], [878.0, 96023.0], [876.0, 96122.0], [874.0, 96135.0], [872.0, 96176.0], [926.0, 94199.0], [927.0, 94195.0], [914.0, 95416.0], [913.0, 94876.0], [925.0, 94219.0], [923.0, 94243.0], [922.0, 94260.0], [920.0, 94340.0], [911.0, 95466.0], [898.0, 95364.0], [897.0, 95397.0], [901.0, 95170.0], [900.0, 95173.0], [909.0, 95564.0], [908.0, 95060.0], [906.0, 95573.0], [919.0, 94507.0], [918.0, 94535.0], [916.0, 95142.0], [915.0, 94814.0], [946.0, 2.0], [952.0, 3.0], [935.0, 93893.0], [931.0, 94079.0], [930.0, 94087.0], [929.0, 94167.0], [950.0, 2.0], [948.0, 1.0], [947.0, 1.0], [945.0, 1.0], [944.0, 1.0], [943.0, 1.0], [941.0, 1.0], [940.0, 2.0], [939.0, 93834.0], [938.0, 93840.0], [937.0, 93871.0], [987.0, 2.0], [989.0, 2.0], [985.0, 2.0], [966.0, 1.0], [964.0, 2.0], [962.0, 2.0], [960.0, 2.3333333333333335], [983.0, 2.0], [981.0, 2.0], [978.0, 1.0], [975.0, 1.0], [974.0, 2.0], [970.0, 1.6666666666666667], [1022.0, 1.0], [1023.0, 1.0], [1019.0, 1.0], [1017.0, 1.0], [1015.0, 1.5], [1012.0, 1.0], [1009.0, 1.0], [1007.0, 1.0], [992.0, 2.0], [995.0, 2.0], [993.0, 1.0], [999.0, 1.0], [997.0, 2.0], [1006.0, 1.0], [1004.0, 2.0], [1002.0, 1.0], [1050.0, 1.8333333333333333], [1038.0, 2.0], [1036.0, 1.0], [1035.0, 1.0], [1034.0, 1.0], [1031.0, 1.0], [1030.0, 1.0], [1027.0, 1.0], [1026.0, 1.0]], "isOverall": false, "label": "Create Issue User 550 Ramp 1", "isController": false}, {"data": [[526.9599999999999, 121608.48909090908]], "isOverall": false, "label": "Create Issue User 550 Ramp 1-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1050.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.71585144E12, "maxY": 17830.083333333332, "series": [{"data": [[1.71585156E12, 15195.883333333333], [1.71585162E12, 17830.083333333332], [1.71585144E12, 4867.35]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71585156E12, 15911.133333333333], [1.71585162E12, 10208.716666666667], [1.71585144E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71585162E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1.5245901639344264, "minX": 1.71585144E12, "maxY": 174168.0663265306, "series": [{"data": [[1.71585156E12, 114186.96415770607], [1.71585162E12, 173837.2046783626], [1.71585144E12, 1.7799999999999998]], "isOverall": false, "label": "Create Issue User 500 Ramp 1", "isController": false}, {"data": [[1.71585156E12, 111766.67235494888], [1.71585162E12, 174168.0663265306], [1.71585144E12, 1.5245901639344264]], "isOverall": false, "label": "Create Issue User 550 Ramp 1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71585162E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71585144E12, "maxY": 174167.88265306107, "series": [{"data": [[1.71585156E12, 114186.7419354839], [1.71585162E12, 173836.97076023396], [1.71585144E12, 0.0]], "isOverall": false, "label": "Create Issue User 500 Ramp 1", "isController": false}, {"data": [[1.71585156E12, 111766.40955631401], [1.71585162E12, 174167.88265306107], [1.71585144E12, 0.0]], "isOverall": false, "label": "Create Issue User 550 Ramp 1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71585162E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.5663265306122446, "minX": 1.71585144E12, "maxY": 13.491039426523303, "series": [{"data": [[1.71585156E12, 13.491039426523303], [1.71585162E12, 0.672514619883041], [1.71585144E12, 1.7200000000000002]], "isOverall": false, "label": "Create Issue User 500 Ramp 1", "isController": false}, {"data": [[1.71585156E12, 4.778156996587036], [1.71585162E12, 0.5663265306122446], [1.71585144E12, 1.459016393442623]], "isOverall": false, "label": "Create Issue User 550 Ramp 1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71585162E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 93834.0, "minX": 1.71585156E12, "maxY": 179288.0, "series": [{"data": [[1.71585156E12, 146994.0], [1.71585162E12, 179288.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71585156E12, 93834.0], [1.71585162E12, 156765.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71585156E12, 136510.7], [1.71585162E12, 178299.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71585156E12, 143456.75], [1.71585162E12, 179037.24]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71585156E12, 111041.0], [1.71585162E12, 175684.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71585156E12, 139496.2], [1.71585162E12, 178809.4]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71585162E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 178851.0, "series": [{"data": [[2.0, 143508.5], [32.0, 101296.0], [37.0, 111910.0], [3.0, 140981.0], [49.0, 176394.0], [48.0, 178082.0], [51.0, 177214.0], [4.0, 128058.5], [5.0, 122823.5], [6.0, 143927.5], [7.0, 159605.0], [8.0, 134493.0], [9.0, 131276.5], [11.0, 127244.0], [12.0, 137845.5], [13.0, 116244.5], [14.0, 126210.5], [15.0, 167365.0], [16.0, 104017.0], [1.0, 157057.0], [17.0, 153130.5], [19.0, 100861.5], [22.0, 94197.0], [25.0, 175531.0], [26.0, 100095.5], [27.0, 178851.0], [28.0, 172761.5], [29.0, 95397.0], [30.0, 106632.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[3.0, 3.0], [108.0, 1.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 108.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 178850.0, "series": [{"data": [[2.0, 143508.0], [32.0, 101296.0], [37.0, 111910.0], [3.0, 140981.0], [49.0, 176394.0], [48.0, 178082.0], [51.0, 177214.0], [4.0, 128058.5], [5.0, 122823.0], [6.0, 143927.5], [7.0, 159604.0], [8.0, 134493.0], [9.0, 131276.5], [11.0, 127244.0], [12.0, 137845.0], [13.0, 116244.0], [14.0, 126210.5], [15.0, 167364.0], [16.0, 104016.5], [1.0, 157056.5], [17.0, 153130.0], [19.0, 100861.0], [22.0, 94197.0], [25.0, 175531.0], [26.0, 100095.0], [27.0, 178850.0], [28.0, 172761.0], [29.0, 95397.0], [30.0, 106632.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[3.0, 0.0], [108.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 108.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 17.5, "minX": 1.71585144E12, "maxY": 17.5, "series": [{"data": [[1.71585144E12, 17.5]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71585144E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.85, "minX": 1.71585144E12, "maxY": 9.533333333333333, "series": [{"data": [[1.71585156E12, 9.533333333333333], [1.71585162E12, 6.116666666666666]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.71585144E12, 1.85]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71585162E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.8333333333333334, "minX": 1.71585144E12, "maxY": 4.883333333333334, "series": [{"data": [[1.71585144E12, 1.0166666666666666]], "isOverall": false, "label": "Create Issue User 550 Ramp 1-failure", "isController": false}, {"data": [[1.71585156E12, 4.883333333333334], [1.71585162E12, 3.2666666666666666]], "isOverall": false, "label": "Create Issue User 550 Ramp 1-success", "isController": false}, {"data": [[1.71585144E12, 0.8333333333333334]], "isOverall": false, "label": "Create Issue User 500 Ramp 1-failure", "isController": false}, {"data": [[1.71585156E12, 4.65], [1.71585162E12, 2.85]], "isOverall": false, "label": "Create Issue User 500 Ramp 1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71585162E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.85, "minX": 1.71585144E12, "maxY": 9.533333333333333, "series": [{"data": [[1.71585156E12, 9.533333333333333], [1.71585162E12, 6.116666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71585144E12, 1.85]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71585162E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

